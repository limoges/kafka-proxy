---
# Source: haproxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-haproxy
  namespace: haproxy
  labels:
    helm.sh/chart: haproxy-1.24.0
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.1.5"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: haproxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-haproxy
  namespace: haproxy
  labels:
    helm.sh/chart: haproxy-1.24.0
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.1.5"
    app.kubernetes.io/managed-by: Helm
data:
  haproxy.cfg: |
  
    global
      log stdout format raw local0
      maxconn 1024
    
    defaults
      log global
      timeout client 60s
      timeout connect 60s
      timeout server 60s
    
    frontend kafka-listener
      mode tcp
      bind :9092
      default_backend kafka-upstream
    
    backend kafka-upstream
      mode tcp
      balance leastconn
      server kafka-proxy kafka-proxy:9092 check send-proxy-v2
---
# Source: haproxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-haproxy
  namespace: haproxy
  labels:
    helm.sh/chart: haproxy-1.24.0
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.1.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
  - name: https
    protocol: TCP
    port: 443
    targetPort: https
  - name: kafka
    protocol: TCP
    port: 9092
    targetPort: kafka
  - name: stat
    protocol: TCP
    port: 1024
    targetPort: stat
---
# Source: haproxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-haproxy
  namespace: haproxy
  labels:
    helm.sh/chart: haproxy-1.24.0
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.1.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  minReadySeconds: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: haproxy
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/environment: a733044d8a12810007cb86575ea2cfcfed620ea77ddfd8be4fed1069264d3e7c
    spec:
      serviceAccountName: release-name-haproxy
      terminationGracePeriodSeconds: 60
      securityContext:
        {}
      dnsPolicy: ClusterFirst
      volumes:
        - name: haproxy-config
          configMap:
            name: release-name-haproxy
      containers:
        - name: haproxy
          image: "haproxytech/haproxy-alpine:3.1.5"
          imagePullPolicy: IfNotPresent
          args:
            - -f
            - /usr/local/etc/haproxy/haproxy.cfg
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: kafka
              containerPort: 9092
              protocol: TCP
            - name: stat
              containerPort: 1024
              protocol: TCP
          resources:
            requests:
              cpu: 250m
              memory: 128Mi
          volumeMounts:
            - name: haproxy-config
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              subPath: haproxy.cfg
